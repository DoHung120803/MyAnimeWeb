server:
  port: 8080
  servlet:
    context-path: /

spring:
  elasticsearch:
    uris: https://localhost:9200
    username: elastic
    password: ${ELASTICSEARCH_PASSWORD}
  datasource:
    url: ${MYSQL_URL}
    driverClassName: "com.mysql.cj.jdbc.Driver"
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: "cdc-consumer-group"
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

  data:
    redis:
      url: redis://${REDIS_USERNAME}:${REDIS_PASSWORD}@${REDIS_HOST}
      ssl:
        enabled: true
      #      host: redis-19192.c292.ap-southeast-1-1.ec2.redns.redis-cloud.com:19192
      #      port: 19192
  #      username: ${REDIS_USERNAME}
  #      password: ${REDIS_PASSWORD}
  #      timeout: 2000ms
  #      lettuce:
  #        pool:
  #          max-active: 8
  #          max-idle: 8
  #          min-idle: 0
  #          max-wait: 5000ms
  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 2MB


cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME}
  api-key: ${CLOUDINARY_API_KEY}
  api-secret: ${CLOUDINARY_API_SECRET}

admin:
  username: ${ADMIN_USERNAME_DEFAULT}
  password: ${ADMIN_PASSWORD_DEFAULT}


jwt:
  signerKey: ${JWT_SIGNER_KEY}

elasticsearch:
  host: ${ELASTICSEARCH_HOST}
  port: ${ELASTICSEARCH_PORT}
  username: ${ELASTICSEARCH_USERNAME}
  password: ${ELASTICSEARCH_PASSWORD}
cron:
  sync-anime-disable: ${CRON_SYNC_ANIME_DISABLE:false}

sentry:
  dsn: ${SENTRY_DSN}
